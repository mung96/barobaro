spring:
  application:
    name: baro

  profiles:
    active: ${PROFILE}

  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379

  jpa:
    properties:
      hibernate:
        jdbc:
          batch_size: 20
        order_inserts: true

  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub
        registration:
          kakao:
            client-id: ${KAKAO_ID}
            client-secret: ${KAKAO_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: ${KAKAO_REDIRECT}
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
          naver:
            client-id: ${NAVER_ID}
            client-secret: ${NAVER_SECRET}
            redirect-uri: ${NAVER_REDIRECT}
            client-name: Naver
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile_image
              - name
          google:
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT}
            authorization-grant-type: authorization_code
            client-name: google
            scope:
              - email
              - profile

jwt:
  secret: ${JWT_SECRET_KEY}
  access:
    expiration: ${ACCESS_TOKEN_EXPIRED}
  refresh:
    expiration: ${REFRESH_TOKEN_EXPIRED}

cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET}
    stack:
      auto: false
    region:
      static: ap-northeast-2
    credentials:
      accessKey: ${S3_ACCESSKEY}
      secretKey: ${S3_SECRETKEY}

server:
  tomcat:
    max-http-form-post-size: 20MB

index:
  analysis:
    analyzer:
      nori_analyzer:
        type: custom
        tokenizer: nori_tokenizer
        filter: [nori_readingform, nori_part_of_speech]
    tokenizer:
      nori_tokenizer:
        type: nori_tokenizer
        decompound_mode: discard  # 복합어 분석 옵션 (discard, none, mixed)